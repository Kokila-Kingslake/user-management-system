name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: yourdbname
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Grant Execute Permission to Maven Wrapper
        run: chmod +x ./backend/mvnw

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Test Backend
        working-directory: backend
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/yourdbname
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
        run: ./mvnw clean install


  frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        working-directory: frontend
        run: npm install

      - name: Update Browserslist Database
        working-directory: frontend
        run: npx browserslist@latest --update-db
  
      - name: Build Frontend
        working-directory: frontend
        run: CI=false npm run build

      - name: Run Tests
        working-directory: frontend
        run: npm test -- --watchAll=false

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy Backend
        run: |
          echo "Deploying backend..."
          #Add backend deloyment commands

      - name: Deploy Frontend
        run: |
          echo "Deploying frontend..."
          #Add frontend deloyment commands
